<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.6/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js"></script>
    
    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-responsive.min.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/custom.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body style="background-color:rgb(193, 230, 243)">
      <nav class="navbar navbar-expand-md bg-dark navbar-dark">
          <a class="navbar-brand" href="/">FancyMania</a>
          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="collapsibleNavbar">
            <ul class="navbar-nav">
              <li class="nav-item">
                <a class="nav-link" href="#">Mens</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#">Womens</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="#">Kids</a>
              </li>    
            </ul>
            <form class="form-inline my-2 my-lg-0 mx-auto">
                  <input class="form-control mr-sm-2" type="search" placeholder="Search" size="50" >
                  <button class="btn btn-outline-primary my-2 my-sm-0" type="submit">Search</button>
                </form>
          </div> 
          <div class="row">
              <div class="col-sm-0">
               </div>
               
               <div class="col-sm-12">
                   <div class="float-sm-right mr-auto">
                   <div class="btn-group">
                       <p style="color:rgb(67, 146, 177)" >Welcome!
                        <% if(session.authenticated) { %>
                          <a href="/user/show/<%= session.User.id %>" class="btn btn-sm" style="color:rgb(67, 146, 177)"><strong><%= session.User.name %></strong></a>
                          <a href="/session/destroy" class="btn btn-sm" style="color:rgb(67, 146, 177)">Sign Out</a> 
                          <% } else { %>
                        <strong> Guest </strong></p>
                       <a href="/session/login"class="btn btn-sm"style="color:rgb(67, 146, 177)">&nbsp;&nbsp; Login </a> 
                       <a href="/user/signup" class="btn btn-sm"style="color:rgb(67, 146, 177)">&nbsp;&nbsp;Sign up</a>
                       <% } %>
                       <a href="#"class="btn btn-sm"style="color:rgb(67, 146, 177)">&nbsp;&nbsp; About </a> 
                       <a href="#"class="btn btn-sm"style="color:rgb(67, 146, 177)"> &nbsp;Contact Us</a>
                     </div>
                     </div>
               </div>
           </div> 
        </nav>
       
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery-3.2.1.min.js"></script>
    <script src="/js/dependencies/jquery.validate.min.js"></script>
    <script src="/js/dependencies/angular.js"></script>
    <script src="/js/dependencies/angular.min.js"></script>
    <script src="/js/dependencies/customValidate.js"></script>
    <script src="/js/custom.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
